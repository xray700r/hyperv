# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
    name: LinuxBuild2

steps:
- checkout: self
  clean: true
  fetchTags: false
- task: Bash@3
  displayName: 'apt update'
  continueOnError: True
  inputs:
    targetType: inline
    script: >-
      sudo apt-get update
    failOnStderr: false
- task: Bash@3
  displayName: 'Install ansible galaxy and deps if not installed'
  inputs:
    targetType: inline
    script: >-

      sudo apt-get install python3-pip git libffi-dev libssl-dev -y
      
      sudo apt-get install ansible -y

    failOnStderr: true
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
- task: Bash@3
  displayName: 'Build ansible galaxy collection'
  inputs:
    targetType: inline
    workingDirectory: '$(Build.ArtifactStagingDirectory)'
    script: >-
        ansible-galaxy collection build
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/*.tar.gz'
    ArtifactName: 'xray700r-hyperv'
    publishLocation: 'Container'
    failOnStderr: true
- task: Bash@3
  displayName: 'Publish to ansible galaxy namespace'
  inputs:
    targetType: inline
    script: >-

        tarfile=$(find . -type f -name 'xray700r-hyperv-*.tar.gz' -exec basename {} ';')
        
        ansible-galaxy collection publish ./$tarfile --api-key $(GalaxyApiKeyHyperv)

    failOnStderr: true
- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '**/**'
    RemoveDotFiles: true